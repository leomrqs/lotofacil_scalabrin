# -------------------------------------------------
#  Projeto Lotof√°cil ‚Äì Makefile (vers√£o 2025‚Äë06‚Äë16)
# -------------------------------------------------
# Alvos r√°pidos:
#   make bench     ‚Äì gera S15‚Ä¶S11 + bench.csv
#   make sb14/sb13/sb12/sb11  ‚Äì executa Programas 2‚Äë5
#   make verify    ‚Äì valida todos os SB de uma vez
#   make logs      ‚Äì exibe todos os logs CSV em prog*_saida/
#   make reset     ‚Äì apaga *apenas* resultados & logs
#   make package   ‚Äì cria lotofacil_submission.zip via package.py
#   make distclean ‚Äì reset + remove lotofacil_submission.zip
# -------------------------------------------------

PY      ?= python
RESULTS = resultados

# Arquivos gerados pelo bench
S15 = $(RESULTS)/S15.csv
S14 = $(RESULTS)/S14.csv
S13 = $(RESULTS)/S13.csv
S12 = $(RESULTS)/S12.csv
S11 = $(RESULTS)/S11.csv

# Sa√≠das Greedy
OUT2 = prog2_saida/SB15_14.csv
OUT3 = prog3_saida/SB15_13.csv
OUT4 = prog4_saida/SB15_12.csv
OUT5 = prog5_saida/SB15_11.csv

# -------------------------------------------------
.PHONY: help bench sb14 sb13 sb12 sb11 verify logs reset package distclean

help:
	@echo "\nAlvos dispon√≠veis:";
	@echo "  bench     ‚Äì gerar tabelas S15‚Ä¶S11 + bench.csv";
	@echo "  sb14      ‚Äì gerar SB15_14 (cobre S14)";
	@echo "  sb13      ‚Äì gerar SB15_13 (cobre S13)";
	@echo "  sb12      ‚Äì gerar SB15_12 (cobre S12)";
	@echo "  sb11      ‚Äì gerar SB15_11 (cobre S11)";
	@echo "  verify    ‚Äì rodar verify_all.py (requer todos SB)";
	@echo "  logs      ‚Äì mostrar todos os *_log.csv dentro de prog*_saida";
	@echo "  reset     ‚Äì remover pastas de sa√≠da (mant√©m c√≥digo)";
	@echo "  package   ‚Äì gerar lotofacil_submission.zip";
	@echo "  distclean ‚Äì reset + remove lotofacil_submission.zip";

# ----------------------
# Etapa 1: Benchmark
# ----------------------
$(S15):
	$(PY) bench.py

bench: $(S15)
	@echo "‚úî Benchmark conclu√≠do ‚Äì veja resultados/bench.csv"

# ----------------------
# Programas Greedy
# ----------------------

sb14: $(OUT2)
$(OUT2): $(S15) $(S14)
	$(PY) programa2.py

sb13: $(OUT3)
$(OUT3): $(S15) $(S13)
	$(PY) programa3.py

sb12: $(OUT4)
$(OUT4): $(S15) $(S12)
	$(PY) programa4.py

sb11: $(OUT5)
$(OUT5): $(S15) $(S11)
	$(PY) programa5.py

# ----------------------
# Verifica√ß√£o em lote
# ----------------------
verify: $(OUT2) $(OUT3) $(OUT4) $(OUT5)
	$(PY) verify_all.py

# ----------------------
# Exibir logs
# ----------------------
logs:
	@echo "\n### Conte√∫do dos logs em prog*_saida/*.csv ###";
	@for f in prog*_saida/*_log.csv ; do \
		if [ -f $$f ]; then echo "\n--- $$f ---"; cat $$f; fi ; \
	done
	@for f in prog7_saida/*.csv ; do \
		if [ -f $$f ]; then echo "\n--- $$f ---"; cat $$f; fi ; \
	done

# ----------------------
# Limpeza / Reset
# ----------------------
RESET_DIRS = resultados prog2_saida prog3_saida prog4_saida prog5_saida prog7_saida

reset:
	rm -rf $(RESET_DIRS)
	@echo "üóëÔ∏è  Pastas de resultados removidas."

distclean: reset
	rm -f lotofacil_submission.zip
	@echo "üßπ Reposit√≥rio limpo (sem artefatos)."

# ----------------------
# Empacotamento final
# ----------------------
package: verify
	$(PY) package.py
	@echo "‚úî lotofacil_submission.zip pronto para envio."
